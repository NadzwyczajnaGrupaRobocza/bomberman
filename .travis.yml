sudo: required
dist: xenial
language: cpp

services:
  - xvfb

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:mhier/libboost-latest'
          packages:
            - g++-8
            - boost1.68
            - valgrind
      env:
      - C_COMPILER=gcc-8
      - CXX_COMPILER=g++-8
    # - compiler: clang
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-trusty-3.8
    #       packages:
    #         - clang-3.8
    #   env:
    #   - C_COMPILER=clang-3.8
    #   - CXX_COMPILER=clang++-3.8

# Build steps

install:
        #- mkdir boost-dl; cd boost-dl
        #- wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.bz2
        #- tar --bzip2 -xf ./boost_1_65_1.tar.bz2
        #- sudo mv ./boost_1_65_1/boost /usr/include
        #- cd ..
  - mkdir sfml-dl; cd sfml-dl
  - wget https://www.sfml-dev.org/files/SFML-2.5.1-linux-gcc-64-bit.tar.gz
  - tar xzf SFML-2.5.1-linux-gcc-64-bit.tar.gz

script:
  - cd ../
  - export SFML=`pwd`/sfml-dl/SFML-2.5.1
  - echo "sflm $SFML"
  - mkdir build
  - cd build
  - env CC=${C_COMPILER} CXX=${CXX_COMPILER} cmake .. -DENABLE_COVERAGE:BOOL=TRUE -DSFML_ROOT=$SFML
  - echo "We have" `nproc` "cores here"
  - make -j `nproc`
  - export DISPLAY=':99.0'
  - echo "cmake time"
  - ctest -j `nproc` -V
  - echo "xvfb time"
  - xvfb-run -e /dev/stdout -a ctest -j `nproc` -V
  - echo "start valgrind"
  - export DISPLAY=:99.0
  - valgrind --leak-check=full ./bin/graphics-ut --gtest_filter=sfml_renderer_pool_test.renderTexturedObject
  - echo 'start valgrind again'
  - xvfb-run -e /dev/stdout -a valgrind --leak-check=full ./bin/graphics-ut --gtest_filter=sfml_renderer_pool_test.renderTexturedObject

after_success:
  - bash <(curl -s https://codecov.io/bash)
